// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _288.TechTest.Data;

namespace _288.TechTest.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_288.TechTest.Data.Entities.Basket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("_288.TechTest.Data.Entities.BasketItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.ToTable("BasketItems");
                });

            modelBuilder.Entity("_288.TechTest.Data.Entities.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActiveFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ActiveTo")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiscountTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("MinimumSpend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DiscountTypeId");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            ActiveFrom = new DateTime(2020, 9, 5, 19, 43, 14, 27, DateTimeKind.Local).AddTicks(9067),
                            ActiveTo = new DateTime(2022, 9, 5, 19, 43, 14, 30, DateTimeKind.Local).AddTicks(7016),
                            Amount = 5m,
                            Code = "5OFF",
                            CompanyId = "TestCompanyName",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountTypeId = -1,
                            MinimumSpend = 10m
                        },
                        new
                        {
                            Id = -2,
                            ActiveFrom = new DateTime(2020, 9, 5, 19, 43, 14, 30, DateTimeKind.Local).AddTicks(8205),
                            ActiveTo = new DateTime(2022, 9, 5, 19, 43, 14, 30, DateTimeKind.Local).AddTicks(8221),
                            Amount = 10m,
                            Code = "10OFF",
                            CompanyId = "TestCompanyName",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountTypeId = -1,
                            MinimumSpend = 20m
                        },
                        new
                        {
                            Id = -3,
                            ActiveFrom = new DateTime(2020, 9, 5, 19, 43, 14, 30, DateTimeKind.Local).AddTicks(8226),
                            ActiveTo = new DateTime(2022, 9, 5, 19, 43, 14, 30, DateTimeKind.Local).AddTicks(8229),
                            Amount = 5m,
                            Code = "5PERCENTOFF",
                            CompanyId = "TestCompanyName",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountTypeId = -2,
                            MinimumSpend = 10m
                        },
                        new
                        {
                            Id = -4,
                            ActiveFrom = new DateTime(2020, 9, 5, 19, 43, 14, 30, DateTimeKind.Local).AddTicks(8233),
                            ActiveTo = new DateTime(2022, 9, 5, 19, 43, 14, 30, DateTimeKind.Local).AddTicks(8236),
                            Amount = 10m,
                            Code = "10PERCENTOFF",
                            CompanyId = "TestCompanyName",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountTypeId = -2,
                            MinimumSpend = 20m
                        });
                });

            modelBuilder.Entity("_288.TechTest.Data.Entities.DiscountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DiscountTypes");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Removes value from whole order",
                            Name = "Gift Voucher"
                        },
                        new
                        {
                            Id = -2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Removes percentage from whole order",
                            Name = "Percent"
                        });
                });

            modelBuilder.Entity("_288.TechTest.Data.Entities.BasketItem", b =>
                {
                    b.HasOne("_288.TechTest.Data.Entities.Basket", "Basket")
                        .WithMany("BasketItems")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");
                });

            modelBuilder.Entity("_288.TechTest.Data.Entities.Discount", b =>
                {
                    b.HasOne("_288.TechTest.Data.Entities.DiscountType", "DiscountType")
                        .WithMany("Discounts")
                        .HasForeignKey("DiscountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiscountType");
                });

            modelBuilder.Entity("_288.TechTest.Data.Entities.Basket", b =>
                {
                    b.Navigation("BasketItems");
                });

            modelBuilder.Entity("_288.TechTest.Data.Entities.DiscountType", b =>
                {
                    b.Navigation("Discounts");
                });
#pragma warning restore 612, 618
        }
    }
}
